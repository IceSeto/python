# -*-coding = utf-8 -*-
# @Time : 2022/10/18 22:50
# @Author : B21041528
# @File : demo7.py
# @software : PyCharm
'''
tup1 = ()  #创建空的元组
print(type(tup1))
#tup2 = (50)  <class 'int'>
# tup2 = (50,)
tup2 = (50,60,70)
print(type(tup2))
'''
'''
tup1 = ("abc","def","2000","2020","333","444","555")
print(tup1[0])
print(tup1[-1])  #访问最后一个元素
print(tup1[1:5]) #左闭右开进行切片
'''
# #增 连接
# tup1 = (12,34,45)
# tup2 = ("abc","xyz")
# tup = tup1 +tup2
# print(tup)

# #删
# tup1 = (12,34,45)
# print(tup1)
# del tup1 #删除了整个元组变量
# print("删除后：")
# print(tup1)

#改
# tup1 = (12,34,45)
#
# tup1[0] = 100


#查

#字典定义

'''
info = {"name":"吴彦祖","age":"18"}
#字典访问
print(info["name"])
print(info["age"])
#访问了不存在的键
#print(info["gender"])   #直接访问会报错

#print(info.get("gender"))  #使用get的方法没有找到对应的键返回none
print(info["age"])
print(info.get("gender","m"))   #没找到可以返回默认值 默认值自己设置
'''
'''
#增
info = {"name":"吴彦祖","age":"18"}
newid = input("请输入新的学号")
info["id"] = newid
print(info["id"])
'''
#删#[del]#[clear]
# info = {"name":"吴彦祖","age":"18"}
'''print("删除前：%s"%info["name"])
del info["name"]
print("删除后：%s"%info["name"])    #删除了指定键值对之后再访问 会报错
'''
'''
info = {"name":"吴彦祖","age":"18"}
print("删除前：%s"%info)
del info
print("删除后：%s"%info)              #删除字典后再访问报错
'''
'''

info = {"name":"吴彦祖","age":"18"}
print("删除前：%s"%info)
info.clear()
print("删除后：%s"%info)
'''

#改
'''

info = {"name":"吴彦祖","age":"18"}
info["age"] = 20
print(info["age"])
'''

#查（遍历）
'''

info = {"id":"1","name":"吴彦祖","age":"18"}

# print(info.keys())   #得到所有的键
# print(info.values()) #得到所有的值
# print(info.items())  #得到所有项  每个键值对是一个元组

#遍历所有的键
for key in info.keys():
    print(key)
#遍历所有的值
for value in info.values():
    print(value)
#遍历所有的项
for key,value in info.items():
    print("key=%s,value=%s"%(key,value))
'''
'''
#使用枚举函数，同时拿到列表中的下标和元素内容
mylist = ["a","b","c","d"]

for i,x in enumerate(mylist):
    print(i+1,x)

'''
